2,1370471116977,"stephCoue","stephCoue join the chan."
32,1370471139708,"Alz_","Alz_ leave the IRC (Ping timeout: 245 seconds)."
32,1370472080523,"kud","kud leave the IRC (Remote host closed the connection)."
32,1370472498881,"DontShootMe_","DontShootMe_ leave the IRC (Remote host closed the connection)."
32,1370474951657,"_mlb_","_mlb_ leave the IRC (Read error: Connection reset by peer)."
32,1370475793865,"stephCoue","stephCoue leave the IRC (Remote host closed the connection)."
32,1370476651463,"euskadi31","euskadi31 leave the IRC (Quit: WeeChat 0.4.0)."
2,1370477584492,"kud","kud join the chan."
32,1370477727760,"_kud","_kud leave the IRC (Ping timeout: 246 seconds)."
2,1370480022363,"stephCoue","stephCoue join the chan."
32,1370480310356,"stephCoue","stephCoue leave the IRC (Ping timeout: 246 seconds)."
2,1370492164473,"MoOx","MoOx join the chan."
2,1370497311407,"MoOx_","MoOx_ join the chan."
32,1370497328300,"MoOx_","MoOx_ leave the IRC (Remote host closed the connection)."
2,1370497350065,"MoOx_","MoOx_ join the chan."
32,1370497462501,"MoOx","MoOx leave the IRC (Ping timeout: 260 seconds)."
256,1370497546718,"MoOx_","MoOx_ changed his nick for MoOx."
2,1370498003500,"Alz_","Alz_ join the chan."
32,1370498667018,"kud","kud leave the IRC (Remote host closed the connection)."
2,1370498690514,"rhannequin","rhannequin join the chan."
32,1370498918541,"bobot","bobot leave the IRC (Ping timeout: 260 seconds)."
2,1370499551567,"felixgilles","felixgilles join the chan."
32,1370499651506,"Alz_","Alz_ leave the IRC (Ping timeout: 246 seconds)."
32,1370501020472,"rhannequin","rhannequin leave the IRC (Ping timeout: 240 seconds)."
2,1370501117515,"DontShootMe","DontShootMe join the chan."
2,1370501242964,"rhannequin","rhannequin join the chan."
32,1370501482277,"mab","mab leave the IRC (Quit: Leaving.)."
2,1370502499578,"mab","mab join the chan."
2,1370503559565,"HammHetfield","HammHetfield join the chan."
1,1370503718220,"nfroidure","lo"
2,1370503939571,"_mlb","_mlb join the chan."
2,1370504090023,"lionelB","lionelB join the chan."
32,1370505234166,"rhannequin","rhannequin leave the IRC (Ping timeout: 264 seconds)."
2,1370505513864,"MoOx_","MoOx_ join the chan."
32,1370505520501,"MoOx","MoOx leave the IRC (Ping timeout: 240 seconds)."
1,1370505537616,"nfroidure","Silvouplé, des échantillons : http://jsperf.com/global-vs-local-vs-closure2"
32,1370505740115,"_mlb","_mlb leave the IRC (Remote host closed the connection)."
1,1370506011327,"urcadox","nfroidure: done (Chrome 27)"
1,1370506082896,"urcadox","et FF 21"
2,1370506108532,"_kud","_kud join the chan."
1,1370506341242,"nfroidure","_kud, c'est Marionnette, tweet ton_tweet"
1,1370506346248,"_kud","oki"
1,1370506417420,"nfroidure","urcadox, thx"
1,1370507016715,"lionelB","nfroidure done :) FF22 chrome29 Chrome27"
1,1370507027836,"nfroidure","thx"
1,1370507083992,"nfroidure","Je sais pas ce que vous en pensez, mais le fait d'utiliser des variables locales à tout prix me semble overkill a contrario de tout ce qui est dit sur le web"
1,1370507110787,"lionelB","c'est à dire ?"
1,1370507126436,"lionelB","overkill par rapport à koi ?"
1,1370507153835,"nfroidure","Par rapport au fait de faire ce qu'on veut (closures etc...)"
2,1370507241945,"bigx","bigx join the chan."
1,1370507274676,"lionelB","je comprend pas, la portée des variables et relative à leur utilisation"
1,1370507274771,"nfroidure","Vu le gain en perf, on est à 10 000 000 ops/seconds contre 20 soit 0.0000001 secondes de gagnée par déréférencement de variable"
1,1370507295880,"lionelB","le jour ou t'as besoin de faire de l'optim de portée de var o_O"
1,1370507332435,"nfroidure","lionelB, certains tutos recommandent de cacher les variables globales/scopées dans une variable locale si tu l'utilises plusieurs fois dans ta fonction."
1,1370507333645,"lionelB","après le coté global, c'est plutot pour éviter les effets de bord"
1,1370507351437,"nfroidure","Je trouve ça abbérrant"
1,1370507353959,"No`","\"global c'est le mal\""
1,1370507361251,"No`","c'est comme \"eval\""
1,1370507368493,"No`","tout ce qui est en \"al\", c'est le mal"
1,1370507372758,"lionelB","ben ton test ne reflete pas ca ?"
1,1370507374194,"No`","(bon, pas local ou cheval)"
1,1370507383411,"nfroidure","No`, j'arrête d'utiliser le dom alors :D"
1,1370507421100,"nfroidure","lionelB, il montre que les var locales sont plus rapides certes. Mais bon gagner des nanosecondes..."
1,1370507421194,"lionelB","pourquoi t'as pas fait le test avec Math.pow ou Math.PI"
1,1370507465787,"nfroidure","Là, c'est autre chose, on est dans le déréférencement d'une propriété d'un objet."
1,1370507474618,"lionelB","ben pour un moteur 3D gagner des nanosecondes pour rester fluide, c'est justement LE cas ou c'est utile de cacher les appel de MAth"
1,1370507477267,"nfroidure","Je suis dessus là pour un autre test"
1,1370507509904,"lionelB","je comprend pas ce que tu appelle déréférencé aussi"
1,1370507510782,"nfroidure","lionelB, yep pour une forte contrainte de perf, je suis ok, mais de là à le conseiller en général, moyen..."
1,1370507541658,"lionelB","moi je fait ca mais par flemme var pow = Math.pow"
1,1370507552231,"lionelB","plus court à taper"
1,1370507576146,"nfroidure","déréférencer c'est le fait pour le moteur JavaScript de récupérer la valeur/le pointeur référencé par un identifiant donné (nom de variable)"
1,1370507617181,"lionelB","var local = varGlobale ?"
1,1370507636071,"lionelB","et tu utilise local dans ton scope"
1,1370507681804,"nfroidure","nope, plus compliqué : le moteur fait ça : chercher dans le contexte local : arguments + vars locales > chercher dans les closurtes éventuelles > chercher dans le contexte global"
2,1370507706625,"stephCoue","stephCoue join the chan."
1,1370507713065,"nfroidure","D'où le overhead de l'accès à une var pas locales"
1,1370507732696,"lionelB","oui ben c'est que j'ai dit"
1,1370507778212,"lionelB","dans ton scope, tu déclares un var local qui pointe vers la var globale ?"
1,1370507800784,"nfroidure","c'est ce que certains conseille, mais je trouve ça overkill"
1,1370507804471,"nfroidure","*nt"
2,1370507867922,"bobot","bobot join the chan."
1,1370507902073,"lionelB","ben ca dépend aussi de la taille de la pile (nb de scope a traversé)"
1,1370507906905,"DontShootMe","nfroidure: des liens ?"
1,1370507979562,"nfroidure","http://performance.survol.fr/2008/05/portee-des-variables-javascript/"
1,1370507993143,"nfroidure","http://www.developer.nokia.com/Community/Wiki/JavaScript_Performance_Best_Practices"
1,1370508001913,"lionelB","nfroidure, ton test n'illustre pas vraiment le principe de déréférencement pour le coup"
1,1370508040579,"nfroidure","Il illustre la partie recherche dans les portées du déréférencement."
1,1370508040620,"nfroidure","<nfroidure_> La deuxième partie : http://jsperf.com/local-cache-vs-context-vs-object-dereferencing"
18,1370508572529,"Marionnette","Marionnette join the chan."
8,1370508572622,"_kud","_kud change topic to \"Communauté française des utilisateurs de JavaScript | Site : http://francejs.org\""
1,1370508624237,"_mlb","hello"
1,1370508673550,"nfroidure","lu _mlb"
1,1370508784444,"nfroidure","Le deuxième test est trop étrange. Je me demande si j'ai pas fait une erreur dans les tests"
1,1370508848829,"_mlb","pourquoi ? un .bind c'est toujours une grosse perte en perf"
1,1370508866603,"lionelB","nfroidure fait un test ou tu empiles un centaines de scope aussi"
1,1370508913398,"nfroidure","Je pensais pas autant."
32,1370509080536,"bigx","bigx leave the IRC (Ping timeout: 256 seconds)."
1,1370509146841,"nfroidure","Qquelqu'un a une idée de la cause qui fait que c'est si peu performant ?"
1,1370509207741,"_mlb","http://jsperf.com/local-cache-vs-context-vs-object-dereferencing/2"
1,1370509650733,"nfroidure","_mlb, ton test est tronqué -this.property ne s'exécutera jamais"
1,1370509747990,"_mlb","my bad"
1,1370509800018,"_mlb","les resultats sont ceci dit plutôt similaires http://jsperf.com/local-cache-vs-context-vs-object-dereferencing/2"
1,1370510098344,"DontShootMe","ce sont en effet des resultat coherent !"
1,1370510121701,"nfroidure","So bind<apply<call : http://jsperf.com/local-cache-vs-context-vs-object-dereferencing/3"
1,1370510141343,"DontShootMe","sachant que les variables sont en realité des pointeurs vers la valeur de celle ci"
1,1370510179193,"nfroidure","DontShootMe, perdu ;). Ici property est une valeur primitive"
1,1370510182241,"DontShootMe","donc une function va dabord verifier son scope avant de sortir"
1,1370510195421,"nfroidure","Object4 par contre oui"
1,1370510286293,"DontShootMe","nfroidure: non, pas vraiment"
1,1370510333235,"DontShootMe","property est deja creer sur objet4"
1,1370510347501,"DontShootMe","est à la valeur 123"
1,1370510424878,"DontShootMe","la cacheAccessFunction est plus rapide car tu as creer un \"raccourci\" vers le pointeur original de object1"
1,1370510474194,"DontShootMe","il regarde son scope, il a l'adresse du pointeur, il l'appelle et le gere"
1,1370510479446,"nfroidure","C'est un raccourci contenant un pointeur vers object4"
1,1370510543323,"DontShootMe","nfroidure: exact object4"
1,1370510619263,"nfroidure","Les variables \"contenant\" des objets sont toujours des pointeurs. Mais une variable contenant une valeur primitive contient sa valeur directement."
1,1370510737067,"DontShootMe","simpleAccessFunction tu lui demande de traduire a chaque appel : object1.object2.object3.object4.property"
1,1370510781511,"DontShootMe","il verifie d'abord son scope, il ne trouve pas ! va donc fouiller le scope supperieur ..."
2,1370511127555,"euskadi31","euskadi31 join the chan."
1,1370511131838,"DontShootMe","nfroidure: http://jsperf.com/local-cache-vs-context-vs-object-dereferencing/4"
1,1370511154450,"DontShootMe","pour bien comprendre ! tout est question de scope et pointeur !"
1,1370511245246,"nfroidure","Ton test est mauvais         window.object2.object2.object3.object4.property++;"
1,1370511262382,"DontShootMe","? cad"
1,1370511269676,"nfroidure","object2.object2"
1,1370511279579,"DontShootMe","et ?"
1,1370511287039,"DontShootMe","c'est juste un nom !"
1,1370511313906,"DontShootMe","c'est pas le meme objet ! mais je te l'accorde je n'avait pas fait attention !"
1,1370511591455,"DontShootMe","nfroidure: http://jsperf.com/local-cache-vs-context-vs-object-dereferencing/4"
32,1370511670204,"Shahor","Shahor leave the IRC (Remote host closed the connection)."
32,1370511706869,"_kud","_kud leave the IRC (Remote host closed the connection)."
2,1370511854468,"bigx","bigx join the chan."
32,1370511962817,"bobot","bobot leave the IRC (Ping timeout: 276 seconds)."
1,1370511988648,"nfroidure","http://jsperf.com/local-cache-vs-context-vs-object-dereferencing/8"
1,1370512011644,"nfroidure","DontShootMe, voilà le test fonctionnel"
2,1370512045580,"Shahor","Shahor join the chan."
1,1370512084646,"nfroidure","Ton test est complètement biaisé car tu exécutes pas la fonction..."
1,1370512112923,"DontShootMe","nfroidure: ??"
1,1370512130785,"nfroidure","Je voulais faire un billet sur les tests et le fait qu'il faut s'en méfier, j'ai de la matière maintenant."
1,1370512155350,"nfroidure","simpleAccessFunction2 != simpleAccessFunction2()"
1,1370512266512,"DontShootMe","exact !"
1,1370512270788,"DontShootMe","pas vu !"
1,1370512809149,"DontShootMe","sauf que maintenant dans simpleAccessFunction2 tu rajoute une couche de pointeur vers un pointeur"
1,1370512819633,"DontShootMe","tout en superposant les scope"
1,1370512841105,"DontShootMe","donc avant de retrouver la cible il cherche !"
1,1370512918203,"lionelB","pourquoi vous imbriqué les objets ?"
1,1370512935948,"lionelB","ca crée pas des scopes de fonction ?"
1,1370513009347,"lionelB","pourquoi vous faites pas function(){ function() { function () { .... pour tester la resolution de scope ?"
1,1370513194424,"DontShootMe","lionelB: je parlais de scope dans le cas de la portée des variables !"
1,1370513241823,"lionelB","ok genre sin = Math.sin"
1,1370513247766,"DontShootMe","oui"
32,1370515003793,"_mlb","_mlb leave the IRC (Remote host closed the connection)."
1,1370516540355,"nfroidure","DontShootMe, simpleAccessFunction2 est ta fonction, rien n'a changé sauf qu'elle est exécutée pour de vrai"
1,1370516570767,"DontShootMe","nfroidure: oui je vois bien"
1,1370516601661,"DontShootMe","sauf qu'elle n'est plus dans la variable n'est plus dans le meme scope !"
1,1370516693022,"DontShootMe","c'est de la resolution de nom ! il cherche property dans son scope, si il ne trouve pas il regarde les declarations de son scope ainsi de suite en remontant la chaine jusqu'a trouvé une valeur"
1,1370516702596,"DontShootMe","ou il renvoi undefined"
1,1370516750992,"DontShootMe","ce sera toujours plus long de remonter toute la chaine plutot que d'avoir un lien direct dans son scope !"
1,1370516798474,"DontShootMe","il cherchera moins longtemps et plus le lien est precis moins de recherche il devra faire !"
1,1370516830958,"nfroidure","J'ai l'impression d'enfoncer des portes ouvertes :)"
1,1370516839639,"nfroidure","Let's give it up !"
1,1370516941991,"DontShootMe","dans ton exemple on arrive plus rapidement au scope de object1 que de window en partant de tes fonctions"
1,1370516986459,"DontShootMe","d'autant plus que je ne sais pas comment jsperf ont imbriquer le code avant d'arriver au scope de window !"
1,1370517167780,"DontShootMe","dans simpleAccessFunction2 il va dabord resoudre le nom : window dans son scope car rien n'interdit d'ecrire dans ta function var window = \"ma fenetre\""
1,1370517243359,"DontShootMe","si il ne trouve pas il va traverser toute la chaine"
1,1370517379819,"DontShootMe","imagine une succession hierarchique de scope : window->jsperf->sandbox->prepaCode->object1 = {object2=....}; window.object1=object1->tafonction(window.object1)"
32,1370517449822,"stephCoue","stephCoue leave the IRC (Remote host closed the connection)."
1,1370517494342,"nfroidure"," /o\"
1,1370517579566,"DontShootMe","il va dabord remonter jusqua window pour redescendre a object1"
32,1370518783985,"Shahor","Shahor leave the IRC (Remote host closed the connection)."
2,1370519014605,"Shahor","Shahor join the chan."
1,1370519139620,"DontShootMe","nfroidure: http://jsperf.com/local-cache-vs-context-vs-object-dereferencing/12"
1,1370519223244,"DontShootMe","la difference porte sur simpleAccessFunction2 et simpleAccessFunction3 sur la recherche entre un raccourci vers window et window avec ton object1"
1,1370519379985,"DontShootMe","parcontre les test sur bind son biaisé car la function bind est lancé à chaque tour de test ! c'est donc le bind qui est long pas forcement l'acces aux variables !"
2,1370519475701,"_mlb","_mlb join the chan."
256,1370519865828,"lionelB","lionelB changed his nick for lionel_miam."
2,1370521695340,"stephCoue","stephCoue join the chan."
2,1370521866031,"stephCou_","stephCou_ join the chan."
32,1370522058621,"stephCoue","stephCoue leave the IRC (Ping timeout: 246 seconds)."
256,1370522277206,"MoOx_","MoOx_ changed his nick for MoOx."
2,1370522347665,"goldoraf","goldoraf join the chan."
1,1370522357315,"goldoraf","salut les gens"
1,1370522762229,"nfroidure","lo"
1,1370522799898,"nfroidure","Dîtes les gars, dans les infos d'optimisation de V8, du style :"
1,1370522800586,"nfroidure","[marking formaterNombreOpt 0x2296da741a50 for recompilation, reason: small function, ICs with typeinfo: 3/4 (75%)]"
1,1370522818993,"nfroidure","ICs ça veut dire quoi ? Et le % c'est quoi le niveau d'optim ?"
1,1370522884081,"_mlb","hop, http://cl.ly/PTZd"
32,1370523100808,"stephCou_","stephCou_ leave the IRC (undefined)."
2,1370523155296,"stephCoue","stephCoue join the chan."
2,1370523157466,"_kud","_kud join the chan."
1,1370523904847,"goldoraf","_kud, nfroidure : vous avez un message ;)"
1,1370524036770,"nfroidure","du lourd :)"
2,1370524149997,"lionelB","lionelB join the chan."
1,1370524173857,"DontShootMe","nfroidure: tu as jeté un oeil sur http://jsperf.com/local-cache-vs-context-vs-object-dereferencing/12 ?"
2,1370524321038,"angezane1ti","angezane1ti join the chan."
32,1370524330663,"lionel_miam","lionel_miam leave the IRC (Ping timeout: 264 seconds)."
32,1370524332043,"nfroidure","nfroidure leave the IRC (Ping timeout: 264 seconds)."
32,1370524332202,"loicfrering","loicfrering leave the IRC (Ping timeout: 264 seconds)."
32,1370524332348,"angezanetti","angezanetti leave the IRC (Ping timeout: 264 seconds)."
2,1370524360623,"nfroidure_","nfroidure_ join the chan."
2,1370524442002,"loicfrering","loicfrering join the chan."
32,1370524565594,"bigx","bigx leave the IRC (Ping timeout: 259 seconds)."
2,1370524588477,"bigx","bigx join the chan."
2,1370524596771,"stephCou_","stephCou_ join the chan."
32,1370524702029,"nfroidure_","nfroidure_ leave the IRC (Ping timeout: 298 seconds)."
32,1370524720661,"stephCoue","stephCoue leave the IRC (Ping timeout: 256 seconds)."
2,1370524730660,"nfroidure_","nfroidure_ join the chan."
256,1370525618717,"nfroidure_","nfroidure_ changed his nick for nfroidure."
18,1370526133586,"Marionnette","Marionnette join the chan."
8,1370526133649,"_kud","_kud change topic to \"Communauté française des utilisateurs de JavaScript | Site : http://francejs.org\""
2,1370526806115,"felix_","felix_ join the chan."
1,1370526868265,"_kud","Yes, j'ai lu/vu goldoraf"
1,1370526878956,"_kud","je vais encore le relire, j'ai pas tout ingurgité encore"
1,1370526882145,"_kud","digéré plutôt"
1,1370526896284,"goldoraf","j'ai fait dans le condens� ^^"
32,1370527066746,"felixgilles","felixgilles leave the IRC (Ping timeout: 256 seconds)."
32,1370529889967,"_kud","_kud leave the IRC (Remote host closed the connection)."
2,1370530903489,"_kud","_kud join the chan."
4,1370532355606,"Grirrle1","Grirrle1 leave the chan."
32,1370533194688,"stephCou_","stephCou_ leave the IRC (Remote host closed the connection)."
2,1370533224509,"stephCoue","stephCoue join the chan."
32,1370533552526,"stephCoue","stephCoue leave the IRC (Ping timeout: 248 seconds)."
32,1370533843907,"mab","mab leave the IRC (Quit: Leaving.)."
2,1370534047984,"Grirrle1","Grirrle1 join the chan."
2,1370534062937,"mab","mab join the chan."
32,1370534313343,"HammHetfield","HammHetfield leave the IRC (Quit: HammHetfield)."
4,1370534745169,"Grirrle1","Grirrle1 leave the chan."
2,1370535762006,"Amatewasu","Amatewasu join the chan."
32,1370535887235,"mab","mab leave the IRC (Quit: Leaving.)."
2,1370535917081,"mab","mab join the chan."
32,1370536232510,"felix_","felix_ leave the IRC (Quit: Konversation terminated!)."
32,1370536490965,"DontShootMe","DontShootMe leave the IRC (Remote host closed the connection)."
32,1370536561950,"_mlb","_mlb leave the IRC (Remote host closed the connection)."
32,1370536569690,"goldoraf","goldoraf leave the IRC (Ping timeout: 246 seconds)."
2,1370536929145,"Alz_","Alz_ join the chan."
4,1370537027231,"lionelB","lionelB leave the chan."
2,1370539429245,"_mlb","_mlb join the chan."
32,1370540121175,"bigx","bigx leave the IRC (Ping timeout: 276 seconds)."
